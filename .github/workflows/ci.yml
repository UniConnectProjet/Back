name: Symfony Backend CI/CD

on:
  push:
    branches:
      - main
      - dev

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install PHP and Composer
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: mbstring, pdo, pdo_mysql
          tools: composer, symfony

      - name: Install dependencies
        run: composer install --no-progress --no-interaction --prefer-dist

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Connexion DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: DÃ©finir TAG et SERVICE selon la branche
        id: vars
        run: |
          if [[ "${GITHUB_REF}" == "refs/heads/main" ]]; then
            echo "TAG=prod" >> $GITHUB_ENV
            echo "SERVICE=backend" >> $GITHUB_ENV
          elif [[ "${GITHUB_REF}" == "refs/heads/dev" ]]; then
            echo "TAG=preprod" >> $GITHUB_ENV
            echo "SERVICE=backend-preprod" >> $GITHUB_ENV
          fi
  
      - name: Deploy on VPS
        uses: appleboy/ssh-action@v0.1.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          script: |
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
            cd /var/www
            docker pull inesbrm1/uniconnect-backend:${{ env.TAG }}
            docker compose up -d --no-deps --build ${{ env.SERVICE }}

      - name: Build & Push image backend
        run: |
          docker build -t inesbrm1/uniconnect-backend:${TAG} .
          docker push inesbrm1/uniconnect-backend:${TAG}

      - name: Deploy on VPS
        uses: appleboy/ssh-action@v0.1.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          script: |
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
            cd /var/www
            docker pull inesbrm1/uniconnect-backend:${TAG}
            docker compose up -d --no-deps --build ${SERVICE}
