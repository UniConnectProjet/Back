name: Symfony CI/CD

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_db
        ports:
          - 3306:3306
          
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install PHP and Composer
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: mbstring, pdo, pdo_mysql
          tools: composer, symfony

      - name: Install dependencies
        run: composer install --no-progress --no-interaction --prefer-dist

      # - name: Run PHPUnit tests
       # run: ./vendor/bin/phpunit

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Connexion DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push Docker backend image
        run: |
          docker build -t inesbrm1/uniconnect-backend:latest .
          docker push inesbrm1/uniconnect-backend:latest

      - name: Deploy to VPS
        uses: appleboy/ssh-action@v0.1.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          script: |
            export JWT_PASSPHRASE=${{ secrets.JWT_PASSPHRASE }}
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
            cd /var/www
            docker pull inesbrm1/uniconnect-backend:latest
            docker compose down
            docker compose up -d --build --remove-orphans

      - name: Configurer les clés JWT et mettre à jour la base de données
        uses: appleboy/ssh-action@v0.1.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          script: |
            cd /var/www
            docker compose exec -T backend composer install --no-interaction --prefer-dist
            docker compose exec -T backend mkdir -p config/jwt
            echo "${{ secrets.JWT_PRIVATE_KEY }}" | base64 -d | docker compose exec -T backend sh -c 'cat > config/jwt/private.pem'
            echo "${{ secrets.JWT_PUBLIC_KEY }}" | base64 -d | docker compose exec -T backend sh -c 'cat > config/jwt/public.pem'
            docker compose exec -T backend chmod 600 config/jwt/*.pem
            docker compose exec -T backend php bin/console doctrine:schema:update --force --no-interaction